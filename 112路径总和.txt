


没搞懂为什么在定义traversal的时候是traversal(self,node,count)但是在使用过程中用的是self.traversal(node.left,count):
定义函数传入三个参数，但在使用过程中使用self.传入两个参数


# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, val=0, left=None, right=None):
#         self.val = val
#         self.left = left
#         self.right = right
class Solution:
    def traversal(self,node,count):
        if not node.left and not node.right and count == 0:
            return True
        if not node.left and not node.right and count != 0:
            return False
        if node.left:
            count -= node.left.val
            if self.traversal(node.left,count):
                return True
            count += node.left.val
        if node.right:
            count -= node.right.val
            if self.traversal(node.right,count):
                return True
            count += node.right.val
        return False

    def hasPathSum(self, root: Optional[TreeNode], targetSum: int) -> bool:
        if not root:
            return False
        return self.traversal(root,targetSum)